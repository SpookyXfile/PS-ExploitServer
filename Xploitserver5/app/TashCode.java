
/*
File PayloadDir = new File(Environment.getExternalStorageDirectory().toString() + getString(R.string.xploit_folder) );

Log.i( TAG, "Payload Folder : " + PayloadDir.getAbsolutePath() );

if ( !PayloadDir.exists() )
{
    Log.i( TAG, "Exploit Dir NON EXIST..." );

    if ( !PayloadDir.mkdirs() )
    {
        ShowToast(getBaseContext(), "Failed to create directory", Toast.LENGTH_SHORT);
        PrintLog("Failed to create directory");

    }
}

 */


//PrintLog("Exploit Folder: " + Environment.getExternalStorageDirectory().toString() + getString(R.string.xploit_folder));

            /*
            new Thread( new Runnable()
            {
                public void run()
                {
                    File PayloadDir = new File(Environment.getExternalStorageDirectory().toString() + getString(R.string.xploit_folder) );

                    if ( !PayloadDir.exists() )
                    {
                        if ( !PayloadDir.mkdirs() )
                        {
                            ShowToast(getBaseContext(), "Failed to create directory", Toast.LENGTH_SHORT);
                            PrintLog("Failed to create directory");

                            return;
                        }
                    }

                    File[] contents = PayloadDir.listFiles();

                    if ( contents == null )
                    {
                        ShowToast(getBaseContext(),"Failed to read directory", Toast.LENGTH_SHORT);
                        PrintLog("Failed to read directory");
                    }
                    else if ( contents.length == 0 )
                    {
                        Utils.SaveSetting( getBaseContext(),"VERSION", BuildConfig.VERSION_CODE );

                        PrintLog("Unpacking resources...\n");
                        ShowToast(getBaseContext(),"Unpacking resources...", Toast.LENGTH_SHORT );
                        //unPack(getBaseContext(),R.raw.xproject_zip,Environment.getExternalStorageDirectory().toString() + getString( R.string.xploit_folder ) );
                        ShowToast(getBaseContext(),"Done", Toast.LENGTH_SHORT );

                    }
                    else if ( Utils.GetSetting(getBaseContext(),"VERSION",10) < BuildConfig.VERSION_CODE )
                    {
                        PrintLog("Updating resources...\n");

                        ShowToast(getBaseContext(), "Updating resources...", Toast.LENGTH_SHORT);
                        //unPack(getBaseContext(),R.raw.xproject_zip,Environment.getExternalStorageDirectory().toString() + getString( R.string.xploit_folder ) );
                        ShowToast(getBaseContext(),"Done", Toast.LENGTH_SHORT );

                    }

                }
            } ).start();

             */


            /*
        if ( ( ExternalFolder == null ) && sharedPref.getBoolean( "useExternalSDCARD", false ) )
        {
            //useExternalSDCARD = false;

            AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this );

            alertDialogBuilder.setTitle( "Warning : SDCARD not present !" );
            alertDialogBuilder.setMessage( "If you click YES, the Exploit folder will move to internal storage\n" +
                    "otherwise you quit the app and and insert external SD Card");

            alertDialogBuilder.setPositiveButton("YES", new DialogInterface.OnClickListener()
            {
                @Override
                public void onClick(DialogInterface arg0, int arg1)
                {
                    Toast.makeText( getApplicationContext(),"You clicked yes button",Toast.LENGTH_LONG).show();

                    // TODO : Move Exploit Dir



                }

            } );

            alertDialogBuilder.setNegativeButton("No", new DialogInterface.OnClickListener()
            {
                public void onClick( DialogInterface dialog, int which )
                {
                    finish();
                    System.exit(0 );

                }

            } );

            AlertDialog alertDialog = alertDialogBuilder.create();
            alertDialog.show();
        }
        */

//Snackbar.make( view, "Replace with your own action", Snackbar.LENGTH_LONG )
//        .setAction( "Action", null ).show();


//SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this );

/*
        SharedPreferences.Editor edit = preferences.edit();

        String ExternalFolder = externalStorage.getExternalSDCARD( getApplicationContext() );

        boolean useExternalSDCARD;

        ExploitFolder  = externalStorage.getInternalStorageDir();

        //boolean useExternalSDCARD = sharedPref.getBoolean( "useExternalSDCARD", false );
        //String ExploitFolder = sharedPref.getString("ExploitFolder", "" );

        if ( ExternalFolder != null )
        {
            edit.putString("ExternalSDCARDFolder", ExternalFolder );
            useExternalSDCARD = true;

        }
        else
        {
            edit.putString("ExternalSDCARDFolder",null );
            useExternalSDCARD = false;

        }


        edit.putBoolean("useExternalSDCARD", useExternalSDCARD);
        edit.putString("ExploitFolder", ExploitFolder);
        edit.apply();

        Log.i("zobbi", "Exploit Folder Settings Act : " + ExploitFolder );
        Log.i("zobbi", "useExternalSDCARD Settings Act : " + useExternalSDCARD );
		
		*/
		
		/*
		
		File destFile = new File( preferences.getString("ExternalSDCARDFolder",Environment.getExternalStorageDirectory() + File.separator + "xPloitServer" + File.separator ) );
        Log.i("zobbi", "destFile : " + destFile.getAbsolutePath() );

        if ( !destFile.exists() )
        {
            if ( !destFile.mkdir() )
            {
                misc.PrintAppendHtmlLog( textLogCtrl, R.color.alertColor,16, "Failed to create exploit dir");
            }

        }
		
		*/
		
		/*
		final SwitchPreferenceCompat externalFolder2 = findPreference( getString( R.string.external_sdcard_key ) );

            FileOp fileOp = new FileOp();

            //SharedPreferences.Editor editSettings = preferences.edit();

            if ( exploitFolder != null && externalFolder2 != null )
            {

                Preference.OnPreferenceChangeListener changeListener = new Preference.OnPreferenceChangeListener()
                {

                    public boolean onPreferenceChange(Preference preference, Object newValue)
                    {

                        switch ( String.valueOf( preference.getKey() ) )
                        {
                            case KEY_PREF_EXTERNAL_SDCARD_SW:

                                Log.i("zobbi", "CLICK ! => get key : " + KEY_PREF_EXTERNAL_SDCARD_SW);
                                Log.i("zobbi", "CLICK ! => get key : " + externalFolder2.isChecked() );

                                if ( !externalFolder2.isChecked() )
                                {
                                    //openDialog(getContext());

                                    Context context = getContext();
                                    if ( context != null )
                                    {
                                        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder( context );

                                        alertDialogBuilder.setMessage( "Are you sure, You wanted to make decision" );

                                        alertDialogBuilder.setPositiveButton("Yes", new DialogInterface.OnClickListener()
                                        {
                                            @Override
                                            public void onClick( DialogInterface arg0, int arg1 )
                                            {
                                                if ( preferences.getBoolean("useExternalSDCARD",false ) )
                                                {
                                                    //try
                                                    //{
                                                        File sourceFile = new File(exploitFolder + "/AA/");
                                                        File destFile   = new File(preferences.getString("ExternalSDCARDFolder","/storage/") + "/xPloitServer/");
                                                        Log.i("zobbi", "destFile : " + destFile.getAbsolutePath() );

                                                        if ( destFile.mkdirs() )
                                                        //if ( fileOp.copyDirectory( sourceFile, destFile ) )
                                                        {
                                                            Toast.makeText( getContext(),"Move exploit dir SUCCESS.", Toast.LENGTH_LONG ).show();
                                                        }
                                                        else
                                                        {
                                                            Toast.makeText( getContext(),"Move exploit dir FAILED.", Toast.LENGTH_LONG ).show();
                                                            externalFolder2.setChecked( false );
                                                        }
                                                    //}
                                                    //catch ( IOException ex )
                                                    //{
                                                    //    ex.getStackTrace();
                                                    //}

                                                }

                                            }

                                        } );

                                        alertDialogBuilder.setNegativeButton("No", new DialogInterface.OnClickListener()
                                        {

                                            public void onClick( DialogInterface dialog, int which )
                                            {
                                                externalFolder2.setChecked( false );

                                            }

                                        });

                                        AlertDialog alertDialog = alertDialogBuilder.create();
                                        alertDialog.show();
                                    }

                                }

                                break;

                            default:
                                break;

                        }

                        return true;
                    }

                };

                //if (externalFolder != null)
                externalFolder2.setOnPreferenceChangeListener( changeListener );

            }
			*/