package com.spookyx.xploitserver5;


import android.util.SparseBooleanArray;

import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;
import java.util.List;

abstract class Selectable_Adapter<VH extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH>
{
    @SuppressWarnings("unused")

    private static final String TAG = Selectable_Adapter.class.getSimpleName();

    private SparseBooleanArray selectedItems;

    Selectable_Adapter()
    {
        selectedItems = new SparseBooleanArray();

    }

    void setSelected( int position, boolean value )
    {
        selectedItems.put( position, value );
    }

    /**
     * Indicates if the item at position position is selected
     * @param position Position of the item to check
     * @return true if the item is selected, false otherwise
     */
    boolean isSelected( int position )
    {

        //return getSelectedItems().contains( position );
        return selectedItems.get( position );
    }

    /**
     * Toggle the selection status of the item at a given position
     * @param position Position of the item to toggle the selection status for
     */
    void toggleSelection( int position )
    {
        if ( selectedItems.get( position,false ) )
        {
            selectedItems.delete( position );

        }
        else
        {
            selectedItems.put( position, true );
        }

        notifyItemChanged( position );
    }

    /**
     * Clear the selection status for all items
     */
    void clearSelection()
    {
        List<Integer> selection = getSelectedItems();
        selectedItems.clear();

        for ( Integer i : selection )
        {
            notifyItemChanged( i );
        }

    }

    /**
     * Count the selected items
     * @return Selected items count
     */
    int getSelectedItemCount()
    {

        return selectedItems.size();
    }

    /**
     * Indicates the list of selected items
     * @return List of selected items ids
     */
    List<Integer> getSelectedItems()
    {
        List<Integer> items = new ArrayList<>( selectedItems.size() );

        for ( int i = 0; i < selectedItems.size(); ++i )
        {
            items.add( selectedItems.keyAt( i ) );

        }

        return items;
    }

}
